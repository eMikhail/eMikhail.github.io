{"version":3,"file":"styles/main.879517338e7e8b38af5a.css","mappings":"AAEA,KACI,sBAIJ,WAEI,cADA,gBACA,CAGJ,SCNI,aAqCA,sBD7BA,eEbO,CFYP,eAGwB,CGhB5B,WAiBI,kBAhBA,uBAgBA,kCAfA,4FACA,knBAcA,YCaJ,iBAEI,CDfA,uBCUA,kBAHJ,eAEI,CDTA,0FAOA,kmBCQA,YCPI,iBACA,CDMJ,sBACA,CH4HA,iBIrIA,CJqIA,gBC5IS,8FEqBT,koBCZI,GACA,QJ0IJ,CI1II,SADA,SJ2IJ,kBIvII,qBACI,sBAIR,kBACI,MAGI,yBAEA,CACA,0BACA,8BAEA,mCJwHR,kCInHI,CAdA,UACA,uBACA,aACI,CAFJ,aAaA,uBJ0HJ,sBIxHQ,CAIR,iBJlDA,QAuJA,wBI9FI,CJzDJ,cIyDI,UJ8FJ,aI7FQ,CJqGR,yBIlGQ,oBAGJ,sBAEI,uBAIA,mBAEI,iBJuFZ,CIxFY,mBJwFZ,UItFY","sources":["webpack://eMikhail/./src/styles/base/_base.scss","webpack://eMikhail/./src/styles/abstracts/_mixins.scss","webpack://eMikhail/./src/styles/abstracts/_variables.scss","webpack://eMikhail/./src/styles/base/_fonts.scss","webpack://eMikhail/./src/styles/base/_reset.scss","webpack://eMikhail/./src/styles/main.scss"],"sourcesContent":["@use '../abstracts' as *;\n\nbody {\n    background-color: #000;\n}\n\n// Main container\n.container {\n    max-width: $maxWidth;\n    margin: 0px auto;\n}\n\n.wrapper {\n    overflow: hidden; // Content is clipped if necessary to fit the padding box.\n    min-width: $minWidth;\n    @include flexbox();\n    @include flex-direction(column);\n}\n","// Flexbox display\n@mixin flexbox {\n    display: -webkit-box; // old\n    display: -moz-box; // old\n    display: -ms-flexbox; // ie\n    display: -webkit-flex; // new\n    display: flex; // new\n}\n\n// Flex Flow Direction\n// - applies to: flex containers\n// row (default) | row-reverse | column | column-reverse\n@mixin flex-direction($direction: row) {\n    @if $direction ==row-reverse {\n        -webkit-box-direction: reverse;\n        -webkit-box-orient: horizontal;\n        -moz-box-direction: reverse;\n        -moz-box-orient: horizontal;\n    }\n\n    @else if $direction ==column {\n        -webkit-box-direction: normal;\n        -webkit-box-orient: vertical;\n        -moz-box-direction: normal;\n        -moz-box-orient: vertical;\n    }\n\n    @else if $direction ==column-reverse {\n        -webkit-box-direction: reverse;\n        -webkit-box-orient: vertical;\n        -moz-box-direction: reverse;\n        -moz-box-orient: vertical;\n    }\n\n    @else {\n        -webkit-box-direction: normal;\n        -webkit-box-orient: horizontal;\n        -moz-box-direction: normal;\n        -moz-box-orient: horizontal;\n    }\n\n    -webkit-flex-direction: $direction;\n    -ms-flex-direction: $direction;\n    flex-direction: $direction;\n}\n\n// Flex grow factor\n// - applies to: flex items\n// <number>\n@mixin flex-grow($int: 1) {\n    -webkit-box-flex: $int;\n    -moz-box-flex: $int;\n    -webkit-flex-grow: $int;\n    -ms-flex: $int;\n    flex-grow: $int;\n}\n\n// Flex shrink\n// - applies to: flex item shrink factor\n// <number>\n@mixin flex-shrink($int: 0) {\n    -webkit-flex-shrink: $int;\n    -moz-flex-shrink: $int;\n    -ms-flex: $int;\n    flex-shrink: $int;\n}\n\n// Flex basis\n// - the initial main size of the flex item\n// - applies to: flex itemsnitial main size of the flex item\n// <width>\n@mixin flex-basis($value: auto) {\n    -webkit-flex-basis: $value;\n    flex-basis: $value;\n}\n\n// Cross-axis Alignment\n// - applies to: flex containers\n// flex-start | flex-end | center | baseline | stretch\n@mixin align-items($value: stretch) {\n    @if $value ==flex-start {\n        -webkit-box-align: start;\n        -moz-box-align: start;\n        -ms-flex-align: start;\n    }\n\n    @else if $value ==flex-end {\n        -webkit-box-align: end;\n        -moz-box-align: end;\n        -ms-flex-align: end;\n    }\n\n    @else {\n        -webkit-box-align: $value;\n        -moz-box-align: $value;\n        -ms-flex-align: $value;\n    }\n\n    -webkit-align-items: $value;\n    align-items: $value;\n}\n\n// Packing Flex Lines\n// - applies to: multi-line flex containers\n// flex-start | flex-end | center | space-between | space-around | stretch\n@mixin align-content($value: stretch) {\n    // No Webkit Box Fallback.\n    -webkit-align-content: $value;\n\n    @if $value ==flex-start {\n        -ms-flex-line-pack: start;\n    }\n\n    @else if $value ==flex-end {\n        -ms-flex-line-pack: end;\n    }\n\n    @else {\n        -ms-flex-line-pack: $value;\n    }\n\n    align-content: $value;\n}\n\n// Axis Alignment\n// - applies to: flex containers\n// flex-start | flex-end | center | space-between | space-around\n@mixin justify-content($value: flex-start) {\n    @if $value ==flex-start {\n        -webkit-box-pack: start;\n        -moz-box-pack: start;\n        -ms-flex-pack: start;\n    }\n\n    @else if $value ==flex-end {\n        -webkit-box-pack: end;\n        -moz-box-pack: end;\n        -ms-flex-pack: end;\n    }\n\n    @else if $value ==space-between {\n        -webkit-box-pack: justify;\n        -moz-box-pack: justify;\n        -ms-flex-pack: justify;\n    }\n\n    @else if $value ==space-around {\n        -ms-flex-pack: distribute;\n    }\n\n    @else {\n        -webkit-box-pack: $value;\n        -moz-box-pack: $value;\n        -ms-flex-pack: $value;\n    }\n\n    -webkit-justify-content: $value;\n    justify-content: $value;\n}\n\n@mixin transition($x...) {\n    -webkit-transition: $x;\n    -moz-transition: $x;\n    -ms-transition: $x;\n    -o-transition: $x;\n    transition: $x;\n}\n\n@mixin transform($transforms) {\n    -webkit-transform: $transforms;\n    -moz-transform: $transforms;\n    -ms-transform: $transforms;\n    transform: $transforms;\n}\n","// Minimum supported width (variables used in reset styles)\n$minWidth: 320px;\n\n// Maximum supported width\n$maxWidth: 2560px;\n\n// No retreat\n$containerPadding: 0;\n\n// Width first breakpoint response\n$containerWidth: $maxWidth + $containerPadding;\n\n// Breakpoints\n$pc: $containerWidth; // PCs, laptops, some tablets in horizontal position\n$mobile: 768px; // Phones and Tablets\n\n// Default font (variables used in reset styles)\n$fontfamily: \"Montserrat\";\n$fontSize: 14;\n$mainColor: #fff;\n","@font-face {\n    font-family: 'Montserrat';\n    src: url('../assets/fonts/Montserrat-Regular.eot');\n    src: local('Montserrat Regular'), local('Montserrat-Regular'),\n        url('../assets/fonts/Montserrat-Regular.eot?#iefix') format('embedded-opentype'),\n        url('../assets/fonts/Montserrat-Regular.woff2') format('woff2'),\n        url('../assets/fonts/Montserrat-Regular.woff') format('woff'),\n        url('../assets/fonts/Montserrat-Regular.ttf') format('truetype'),\n        url('../assets/fonts/Montserrat-Regular.svg#Montserrat-Regular') format('svg');\n    font-weight: normal;\n    font-style: normal;\n    font-display: swap;\n}\n\n@font-face {\n    font-family: 'Montserrat';\n    src: url('../assets/fonts/Montserrat-Light.eot');\n    src: local('Montserrat Light'), local('Montserrat-Light'),\n        url('../assets/fonts/Montserrat-Light.eot?#iefix') format('embedded-opentype'),\n        url('../assets/fonts/Montserrat-Light.woff2') format('woff2'),\n        url('../assets/fonts/Montserrat-Light.woff') format('woff'),\n        url('../assets/fonts/Montserrat-Light.ttf') format('truetype'),\n        url('../assets/fonts/Montserrat-Light.svg#Montserrat-Light') format('svg');\n    font-weight: 300;\n    font-style: normal;\n    font-display: swap;\n}\n\n@font-face {\n    font-family: 'Montserrat';\n    src: url('../assets/fonts/Montserrat-ExtraBold.eot');\n    src: local('Montserrat ExtraBold'), local('Montserrat-ExtraBold'),\n        url('../assets/fonts/Montserrat-ExtraBold.eot?#iefix') format('embedded-opentype'),\n        url('../assets/fonts/Montserrat-ExtraBold.woff2') format('woff2'),\n        url('../assets/fonts/Montserrat-ExtraBold.woff') format('woff'),\n        url('../assets/fonts/Montserrat-ExtraBold.ttf') format('truetype'),\n        url('../assets/fonts/Montserrat-ExtraBold.svg#Montserrat-ExtraBold') format('svg');\n    font-weight: bold;\n    font-style: normal;\n    font-display: swap;\n}\n","@use '../abstracts/variables' as *;\n\n* {\n    padding: 0px;\n    margin: 0px;\n    border: 0px;\n}\n\n*,\n*:before,\n*:after {\n    box-sizing: border-box;\n}\n\n:focus,\n:active {\n    // outline: none;\n}\n\na:focus,\na:active {\n    // outline: none;\n}\n\nhtml,\nbody {\n    height: 100%;\n    min-width: $minWidth + px;\n}\n\nbody {\n    color: $mainColor;\n    line-height: 1;\n    font-family: $fontfamily;\n    font-size: $fontSize;\n    //text-rendering: optimizeLegibility;\n    -ms-text-size-adjust: 100%;\n    -moz-text-size-adjust: 100%;\n    -webkit-text-size-adjust: 100%;\n    -webkit-font-smoothing: antialiased;\n    -moz-osx-font-smoothing: grayscale;\n}\n\ninput,\nbutton,\ntextarea {\n    font-family: $fontfamily;\n    font-size: inherit;\n}\n\nbutton {\n    cursor: pointer;\n    color: inherit;\n    background-color: inherit;\n}\n\na {\n    color: inherit;\n}\n\na:link,\na:visited {\n    text-decoration: none;\n}\n\na:hover {\n    text-decoration: none;\n}\n\nul li {\n    list-style: none;\n}\n\nimg {\n    vertical-align: top;\n}\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n    font-weight: inherit;\n    font-size: inherit;\n}\n","// Import mixins, variables\n@use './abstracts' as *;\n\n// Import fonts, reset style\n@use './base' as *;\n\n.content {\n    min-height: 100vh;\n    @include flexbox();\n    padding: 20px;\n\n    &__body {\n        @include flex-grow(1);\n        @include flex-shrink(1);\n        @include flex-basis(auto);\n        max-width: 650px;\n        width: 100%;\n        margin: 0px auto;\n        text-align: center;\n        @include flexbox();\n        @include flex-direction(column);\n        @include justify-content(center);\n    }\n\n    &__title {\n        font-size: 90px;\n        font-weight: 700; // bold\n        margin-bottom: 10px;\n        @include transition(all, .8s);\n\n        &:hover {\n            font-size: 100px;\n        }\n    }\n\n    &__description {\n        position: relative;\n        margin-bottom: 20px;\n        &::before {\n            content: '';\n            width: 100%;\n            height: 1px;\n            background-color: #fff;\n            position: absolute;\n            left: 0;\n            bottom: -5px;\n            @include transform(scaleX(0));\n            @include transition(all, .8s);\n        }\n\n        &:hover::before {\n            @include transform(scaleX(1));\n            @include transition(all, .8s);\n        }\n    }\n\n    &__list {\n        @include flexbox();\n        @include justify-content(space-around);\n        height: 80px;\n    }\n\n    &__item {\n        .icon {\n            fill: #fff;\n            width: 80px;\n            height: 80px;\n            @include transition(all, .3s);\n        }\n\n        .icon-email {\n            stroke: #fff;\n            stroke-width: 3px;\n        }\n\n        &:hover {\n            .icon {\n                width: 180px;\n                height: 180px;\n                @include transition(all, .8s);\n            }\n        }\n    }\n}\n"],"names":[],"sourceRoot":""}